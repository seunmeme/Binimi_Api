{"version":3,"sources":["../../../api/server/controllers/Controller.js"],"names":["util","Util","PatientController","req","res","BinimiService","getAllPatients","allPatients","length","setSuccess","send","setError","body","name","hospital_no","gender","newPatient","addPatient","createdPatient","message","alteredPatient","id","params","Number","updatePatient","getAPatient","thePatient","deletePatient","patientToDelete"],"mappings":"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","sourcesContent":["import BinimiService from '../services/BinimiService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nclass PatientController {\n  static async getAllPatients(req, res) {\n    try {\n      const allPatients = await BinimiService.getAllPatients();\n      if (allPatients.length > 0) {\n        util.setSuccess(200, 'Patients retrieved', allPatients);\n      } else {\n        util.setSuccess(200, 'No patient found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addPatient(req, res) {\n    if (!req.body.name || !req.body.hospital_no || !req.body.gender) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newPatient = req.body;\n    try {\n      const createdPatient = await BinimiService.addPatient(newPatient);\n      util.setSuccess(201, 'Patient Added!', createdPatient);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedPatient(req, res) {\n    const alteredPatient = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updatePatient = await BinimiService.updatePatient(id, alteredPatient);\n      if (!updatePatient) {\n        util.setError(404, `Cannot find patient with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Patient updated', updatePatient);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAPatient(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const thePatient = await BinimiService.getAPatient(id);\n\n      if (!thePatient) {\n        util.setError(404, `Cannot find patient with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found Patient', thePatient);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deletePatient(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const patientToDelete = await BinimiService.deletePatient(id);\n\n      if (patientToDelete) {\n        util.setSuccess(200, 'Patient deleted');\n      } else {\n        util.setError(404, `Patient with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default PatientController;"],"file":"Controller.js"}